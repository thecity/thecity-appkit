@mixin bg($color, $alpha) {
  $rgba: rgba($color, $alpha);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($rgba)}', endColorstr='#{ie-hex-str($rgba)}');";
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($rgba)}', endColorstr='#{ie-hex-str($rgba)}');;
  background-color: transparent;
  background-color: $rgba;
  zoom: 1;
}

@mixin btn($btn_color, $text_color) {
  @include round(3px);
  background: url(image_path("btn_angled_bg.png")) repeat 0 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: $text_color;
  font-size: 12px;
  line-height: 12px;
  display: inline-block;
  padding: 8px 12px 7px 12px;
  text-decoration: none;
  @include bg($btn_color, 1);
  border: 1px solid darken($btn_color, 3%);
  cursor: pointer;
  &:hover {
    color: $text_color;
    text-decoration: none;
    background-color: darken($btn_color, 5%);
  }
}
@mixin clearfix {
  *display: inline-block;
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}

@mixin round($round: 3px) {
  -webkit-border-radius: $round;
  -moz-border-radius: $round;
  border-radius: $round;
}
@mixin round_bottom($round: 3px) {
  -moz-border-radius-bottomright: $round;
  -moz-border-radius-bottomleft: $round;
  -webkit-border-bottom-right-radius: $round;
  -webkit-border-bottom-left-radius: $round;
  -webkit-border-top-left-radius: 0;
  -webkit-border-top-right-radius: 0;
  -moz-border-radius-topleft: 0;
  -moz-border-radius-topright: 0;
  border-bottom-right-radius: $round;
  border-bottom-left-radius: $round;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

@mixin round_top($round: 3px) {
  -moz-border-radius-topright: $round;
  -moz-border-radius-topleft: $round;
  -webkit-border-top-right-radius: $round;
  -webkit-border-top-left-radius: $round;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-bottom-right-radius: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-bottomright: 0;
  border-top-right-radius: $round;
  border-top-left-radius: $round;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

@mixin round_top_left($round: 3px) {
  -webkit-border-top-left-radius: $round;
          border-top-left-radius: $round;
      -moz-border-radius-topleft: $round;
}

@mixin round_top_right($round: 3px) {
  -webkit-border-top-right-radius: $round;
          border-top-right-radius: $round;
      -moz-border-radius-topright: $round;
}

@mixin round_bottom_left($round: 3px) {
  -webkit-border-bottom-left-radius: $round;
          border-bottom-left-radius: $round;
      -moz-border-radius-bottomleft: $round;
}

@mixin round_bottom_right($round: 3px) {
  -webkit-border-bottom-right-radius: $round;
          border-bottom-right-radius: $round;
      -moz-border-radius-bottomright: $round;
}

@mixin gradient_y($color_top, $color_bottom) {
  background-color: $color_bottom;
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($color_top)}', endColorstr='#{ie-hex-str($color_bottom)}');";
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#{ie-hex-str($color_top)}', endColorstr='#{ie-hex-str($color_bottom)}');;
  zoom: 1;
  background: -webkit-gradient(linear, left top, left bottom, from($color_top), to($color_bottom));
  background: -moz-linear-gradient(top,  $color_top,  $color_bottom);
}

@mixin gradient_x($color_left, $color_right) {
  background-color: $color_right;
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(GradientType=1, startColorstr='#{ie-hex-str($color_left)}', endColorstr='#{ie-hex-str($color_right)}');";
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1, startColorstr='#{ie-hex-str($color_left)}', endColorstr='#{ie-hex-str($color_right)}');;
  zoom: 1;
  background: -webkit-gradient(linear, left top, right top, from($color_left), to($color_right));
  background: -moz-linear-gradient(left,  $color_left,  $color_right);
}

@mixin sprite($file, $x, $y, $repeat: no-repeat) {
  background-image: url(image_path($file));
  background-repeat: $repeat;
  background-position: $x $y;
  text-indent: -5000em;
  overflow: hidden;
  display: inline-block;
}

@mixin icon_with_text_sprite($file, $width, $x, $y, $repeat: no-repeat) {
  background-image: url(image_path($file));
  background-repeat: $repeat;
  background-position: $x $y;
  padding-left: ($width + 4);
  display: inline-block;
}

@mixin chevron($color) {
    font-size: 0;
  height: 0;
  line-height: 0;
  border-style: solid;
  border-color: transparent;
  border-width: 23px 0 23px 23px;
  border-left-color: red;
  border-left-color: rgba(255, 0, 0, 0.5);
  position: absolute;
  right: -23px;
  top: 0;
}

/* GRID */
$static_grid_col: 74px;
$static_grid_gutter: 22px;
$fluid_grid_col: 9.919571%;
$fluid_grid_gutter: 2.9490617%;


@mixin grid_column_base($fluid: false, $last: false) {
  float: left;
  @if $last {
    margin-right: 0;
  }
  @else {
    @if $fluid {
      margin-right: $fluid_grid_gutter;
    }
    @else {
      margin-right: $static_grid_gutter;
    }
  }
}
@mixin grid_column_span ($n, $fluid: false) {
  @if $fluid {
    width: ($fluid_grid_col * $n) + ($fluid_grid_gutter * ($n - 1));
  }
  @else {
    width: ($static_grid_col * $n) + ($static_grid_gutter * ($n - 1)); 
  }
}

@mixin grid_append($n, $fluid: false) {
  @if $fluid {
    padding-right: ($n * $fluid_grid_col) + ($n * $fluid_grid_gutter);
  }
  @else {
    padding-right: ($n * $static_grid_col) + ($n * $static_grid_gutter);
  }
}

@mixin grid_prepend($n, $fluid: false) {
  @if $fluid {
    padding-left: ($n * $fluid_grid_col) + ($n * $fluid_grid_gutter);
  }
  @else {
    padding-left: ($n * $static_grid_col) + ($n * $static_grid_gutter);
  }
}

@mixin grid_pull_base() {
  float:left;
  position:relative;
}

@mixin grid_pull_span($n, $last: false, $fluid: false) {
  @if $fluid {
    $pull_value: ($n * $fluid_grid_col) + ($n * $fluid_grid_gutter) - $fluid_grid_gutter;
    left: -$pull_value;
  }
  @else {
    $pull_value: ($n * $static_grid_col) + ($n * $static_grid_gutter) - $static_grid_gutter;
    left: -$pull_value;
  }
}

@mixin grid_push_base() {
  position:relative;
}

@mixin grid_push_span($n, $last: false, $fluid: false) {
  left: ($n * $static_grid_col) + ($n * $static_grid_gutter);
}

@mixin serif_stack {
  font-family: Cambria, Georgia, Times, serif;
}